<?php
/**
 * @namespace
 */
namespace de\codenamephp\platform\di\definitionsProvider\dependency\handler;

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-10-22 at 10:16:00.
 */
class ClassNamesInArrayTest extends TestCase {

  /**
   * @var ClassNamesInArray
   */
  private $sut = null;

  protected function setUp() {
    $this->sut = new ClassNamesInArray();
  }

  /**
   * @expectedException \de\codenamephp\platform\di\definitionsProvider\dependency\MissingDependencyException
   *
   */
  public function testhandle_canThrowException_whenProviderImplementsiDependsOnInterface_andDependenciesAreMissing() {
    $this->sut->setCollectedDependencies(['dep 2']);

    $provider = $this->getMockBuilder(\de\codenamephp\platform\di\definitionsProvider\dependency\iDependsOn::class)->getMock();
    $provider->expects(self::exactly(2))->method('getDependencies')->willReturn(['dep 1', 'dep 2', 'dep 3']);

    $this->sut->handle($provider);
  }

  public function testhandle_canDetectDependencies() {
    $this->sut->setCollectedDependencies(['dep 1', 'dep 2', 'dep 3']);

    $provider = $this->getMockBuilder(\de\codenamephp\platform\di\definitionsProvider\dependency\iDependsOn::class)->getMock();
    $provider->expects(self::once())->method('getDependencies')->willReturn(['dep 1', 'dep 2', 'dep 3']);

    $this->sut->handle($provider);
  }

  public function testhandle_canAddUniqueDependencies_fromgetCoveredDependencies_ifProviderImplementsiCoversDependenciesInterface() {
    $this->sut->setCollectedDependencies(['dep 1', 'dep 2', 'dep 3']);

    $provider = $this->getMockBuilder(\de\codenamephp\platform\di\definitionsProvider\dependency\iCoversDependencies::class)->getMock();
    $provider->expects(self::once())->method('getCoveredDependencies')->willReturn(['dep 2', 'dep 4']);

    $this->sut->handle($provider);

    self::assertEquals(['dep 1', 'dep 2', 'dep 3', 'dep 4'], $this->sut->getCollectedDependencies());
  }

  public function testhandle_canAddUniqueDependencies_fromProviderClassName_ifProviderDoesNotImplementiCoversDependenciesInterface() {
    $this->sut->setCollectedDependencies(['dep 1', 'dep 2', 'dep 3']);

    $provider = $this->getMockBuilder(\de\codenamephp\platform\di\definitionsProvider\dependency\iDependency::class)->getMock();

    $this->sut->handle($provider);

    self::assertEquals(['dep 1', 'dep 2', 'dep 3', get_class($provider)], $this->sut->getCollectedDependencies());
  }
}
